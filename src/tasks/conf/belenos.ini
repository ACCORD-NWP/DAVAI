[DEFAULT]
# host machine
target_host         = belenos
profile_mkjob       = rd-belenos-mt
executables_fmt     = bullx
# reference
ref_xpid            = dv-0485-belenos@mary
ref_vconf           = nrv
ref_namespace       = vortex.multi.fr
# static resources : uenv/genv
davaienv            = uenv:cy50t1.davai_specials.04@davai
appenv_global       = uenv:cy50t1.arpege@4dvarfr.03@davai
appenv_lam          = uenv:cy50t1.LAM@davai.05@davai
appenv_fullpos_partners = uenv:cy50t1.fullpos@partners.01@davai
appenv_clim         = uenv:cy50t1_clim.02@davai
commonenv           = ${appenv_global}
# pseudo-dataflow resources : shelves
input_shelf         = shelf_cy50.01@davai
shelves_vapp        = davai
shelves_vconf       = shelves
shelves2bucket      = False
# Davai options
davai_server        = https://www.umr-cnrm.fr/davai/
ciboulai_token_file = /home/gmap/mrpe/mary/public/ciboulai/token.2022-10-20
ciboulai_send_tries = 2
expertise_fatal_exceptions = False
drhook_profiling    = True
ignore_reference    = False
hide_equal_norms    = True
hook_davai_wagons   = __all__
# default profile
MPIAUTOCONFIG       = /home/gmap/mrpe/mary/.mpiautorc/mpiauto.SUPERTIME_RSS.conf
time                = 00:10:00
ntasks              = 1
nnodes              = 1
openmp              = 1
io_nodes            = 0
io_tasks            = 0
# build & executables
compiling_system    = gmkpack
# vortex defaults
namespace           = vortex.multi.fr
model               = ifs
# vortex specials
python              = /opt/softs/anaconda3/envs/Py37nomkl/bin/python3
loadedjaplugins     = davaidev
extrapythonpath     = epygram
loadedmods          = common,gco,olive,davai.vtx,
                      common.tools.addons, common.util.usepygram,
promote_coredump    = True
# ! 'cycle' is required to be a valid genv/uenv for vortex, even if not a used conf variable in Davai
cycle               = ${davaienv}
# ! if 'cutoff' is not specified in DEFAULT or job config, it is overwritten with a default "production" value
cutoff              = assim

# ==================================================================== FAMILIES

[gmkpack]
packtype            = incr
compilation_flavours = list(IMPIIFCI2302REPRODP.y,IMPIIFCI2302REPROSP.y)
#compilation_flavours = list(IMPIIFCI2302REPRODP.y)
# bound-checking usually only tested during integration:
#compilation_flavours = list(IMPIIFCI2302DP.y,IMPIIFCI2302SP.y,IMPIIFCI2302DP.ybc)
# GMKPACK install: do not rely on user's
GMKROOT = /home/gmap/mrpm/khatib/public/bin/gmkpack
GMK_SUPPORT = /home/gmap/mrpm/khatib/public/bin/gmkpack_support
# FIXME: issue if this is not specified
GMKFILE = IMPIIFCI2302DP.EPONA

[default_compilation_flavour]
compilation_flavour = IMPIIFCI2302REPRODP.y

[arome]
model               = arome
LAM                 = True
appenv              = &{appenv_lam}
fcst_term           = 12
expertise_term      = 12
coupling_frequency  = 1

[arpege]
model               = arpege
LAM                 = False
appenv              = &{appenv_global}
fcst_term           = 6
expertise_term      = 6

[ifs]
model               = ifs
LAM                 = False
appenv              = &{appenv_global}
fcst_term           = 24
expertise_term      = 24

[alaro0]
model               = alaro
LAM                 = True
appenv              = &{appenv_lam}
fcst_term           = 12
expertise_term      = 12
coupling_frequency  = 3
alaro_version       = 0

[alaro1]
model               = alaro
LAM                 = True
appenv              = &{appenv_lam}
fcst_term           = 12
expertise_term      = 12
coupling_frequency  = 3
alaro_version       = 1

[alaro1sfx]
model               = alaro
LAM                 = True
appenv              = &{appenv_lam}
fcst_term           = 12
expertise_term      = 12
coupling_frequency  = 3
alaro_version       = 1_sfx

[4dvar6h]
timeslots           = 7
window_start        = -PT3H
window_length       = PT6H
obs_npools          = 16
cyclestep           = PT6H
assim_scheme        = 4DVar
obsmap_scope        = full
bator_namelist      = namel_bator_assim

[3dvar6h]
timeslots           = 1
window_start        = -PT1H
window_length       = PT2H
obs_npools          = 16
cyclestep           = PT6H
assim_scheme        = 3DVar
obsmap_scope        = full
bator_namelist      = namel_bator_assim

[3dvar3hcnt0]
timeslots           = 1
window_start        = -PT1H
window_length       = PT2H
obs_npools          = 16
cyclestep           = PT3H
assim_scheme        = 3DVar
obsmap_scope        = full
bator_namelist      = namel_bator2019

[3dvar3h]
timeslots           = 1
window_start        = -PT1H
window_length       = PT2H
obs_npools          = 16
cyclestep           = PT3H
assim_scheme        = 3DVar
obsmap_scope        = full
bator_namelist      = namel_bator_assim

[surf_assim_6h]
timeslots           = 1
window_start        = -PT3H
window_length       = PT6H
obs_npools          = 16
cyclestep           = PT6H
assim_scheme        = surf_assim
obsmap_scope        = surf
bator_namelist      = namel_bator_surface
sst_geometry        = globalupd149
seaice_geometry     = globalupd149

[arpege_physiography]
sand_source         = HWSD
clay_source         = HWSD
surface_type_source = ECOCLIMAP_I
orography_source    = GTOPO30
orography_geometry  = global30s
bathymetry_source   = etopo1
bathymetry_geometry = global1min

[arome_physiography]
sand_source         = HWSD
clay_source         = HWSD
surface_type_source = ECOCLIMAP_I
orography_source    = GMTED2010
orography_geometry  = no_arctics7.5s
bathymetry_source   = etopo1
bathymetry_geometry = global1min

[lam_geometries]
geometrys           = geometry(list(sps2500,nps2500,sm2500,nm2500,slcc2500,nlcc2500))

[gauss_grids]
geometrys           = geometry(list(global63,global63c22))

[globaltst149c24]
geometry            = geometry(globaltst149c24)
timestep            = 600

[global798c22]
geometry            = geometry(global798c22)
timestep            = 600

[corsica2500]
geometry            = geometry(corsica2500)
timestep            = 60

[global21]
geometry            = geometry(global21)
timestep            = 3600

[cz2300]
geometry            = geometry(cz2300)
timestep            = 90

[antwrp1300]
geometry            = geometry(antwrp1300)
timestep            = 60

[chmh2325]
geometry            = geometry(chmh2325)
timestep            = 90

# ======================================================================= TASKS

[gitref2pack]
rootpack            = /home/gmap/mrpe/mary/tmppack

[bundle2pack]
rootpack            = /home/gmap/mrpe/mary/rootpack

[pack2bin]
threads             = ${ntasks}
Ofrt                = 4
optvcc              = -g -O2 -march=core-avx2
regenerate_ics      = True
default_programs    = masterodb,bator,ioassign,lfitools,pgd,prep,oovar,ootestvar
programs_by_flavour = dict(IMPIIFCI2302REPROSP.y:list(lfitools,masterodb))
fatal_build_failure = __any__

[wait4build]
refresh_frequency   = 10

[batodb]
obs_paraconst       = float(dict(airs:110,0.45
                                 atms:27,0.2
                                 conv:999999,0.5
                                 cris:42,0.13
                                 default:1000,1
                                 geow:30,0.6
                                 gmi:33,0.13
                                 gps:30,0.8
                                 gpssol:10,0.55
                                 iasi:40,0.17
                                 mwhsx:50,0.4
                                 mwri:40,0.2
                                 odim:80,4
                                 radar:80,1
                                 radar1:80,1
                                 scat:55,0.35
                                 sev:45,0.45
                                 ssmis:48,0.4
                                 tovsa:110,0.7
                                 tovsb:26,0.15
                                 tovsh:72,0.4))

[from_arpege]
rundate             = date(2020081800)
terms               = list(0,6)
geometry            = geometry(globaltst149c24)

[from_ifs]
rundate             = date(2025033100)
terms               = list(0)
geometry            = geometry(global1280co)

[aplpar]
namelist_components = list(noFPinline.nam,noDDH.nam,spnorms.nam)

[apl_arpege]
namelist_components = list(noFPinline.nam,noDDH.nam,spnorms.nam)
nam_hook            = dict(NAMPHY:dict(LAPL_ARPEGE:True))
consistency_ref_tag = aplpar

[aplpar_nproma32]
namelist_components = list(noFPinline.nam,noDDH.nam,spnorms.nam)
nam_hook            = int(dict(NAMDIM:dict(NPROMA:-32)))
consistency_ref_tag = aplpar

[aplpar_nosfx]
namelist_components = list(noFPinline.nam,noDDH.nam,spnorms.nam,noSFX.nam)

[arome_nominal]
namelist_components = list(noFPinline.nam,noDDH.nam,spnorms.nam)

[arome_nproma32]
namelist_components = list(noFPinline.nam,noDDH.nam,spnorms.nam)
nam_hook            = int(dict(NAMDIM:dict(NPROMA:-32)))
consistency_ref_tag = arome_nominal

# ======================================================================== JOBS

[ciboulai_xpsetup]
partition           = transfert
exclusive           = oversubscribe
mem                 = 1000

[build]
# profile
# time might seem big, but it is a majorant of sequential main packs in 3 flavours
time                = 03:00:00
ntasks              = 64
mem                 = 40000
loadedjaplugins     = davaidev,git
bundle_src_dir      = $HOME/bundle_cache

# FORECASTS
# =========

[canonical_arpege_global798c22]
rundate             = 2020081800
namelist_components = list(spnorms.nam,FPinline_6h.nam)
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 32
nnodes              = 4
openmp              = 4

[standalone_alaro_antwrp1300]
rundate             = 2020081800
prefix              = standalone
pgd_source          = static
surf_ic_source      = static
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 32
nnodes              = 1
openmp              = 4

[standalone_alaro1sfx_chmh2325]
rundate             = 2021022000
pgd_source          = static
surf_ic_source      = static
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 32
nnodes              = 1
openmp              = 4

[standalone_arome_corsica2500]
rundate             = 2020081800
pgd_source          = static
surf_ic_source      = static
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 32
nnodes              = 1
openmp              = 4

[standalone_arpege_globaltst149c24]
rundate             = 2020081800
pgd_source          = static
surf_ic_source      = static
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 32
nnodes              = 1
openmp              = 4

[standalone_arpege_nosfx_globaltst149c24]
rundate             = 2020081800
pgd_source          = static
surf_ic_source      = static
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 32
nnodes              = 1
openmp              = 4

[standalone_ifs_global21]
rundate             = 2004101512
pgd_source          = static
surf_ic_source      = static
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 32
nnodes              = 1
openmp              = 4


# MIXS
# ====

[PPF]
prefix              = ppf
rundate             = 2020081800
prep_initial_geometry = geometry(global1198)
pgd_source          = flow
surf_ic_source      = flow
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 32
nnodes              = 1
openmp              = 4

[PF]
prefix              = pf
rundate             = 2020081800
prep_initial_geometry = geometry(global1198)
pgd_source          = static
surf_ic_source      = flow
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 32
nnodes              = 1
openmp              = 4

# FULLPOS
# =======

[LBC]
target_geometries   = geometry(list(lace8km,belgique7km))
source_vapp         = arpege
source_vconf        = 4dvarfr
# profile (ntasks = ntasks/node)
time                = 00:20:00
ntasks              = 32
nnodes              = 3
openmp              = 4

# MISC
# ====

[Physiography_arome]
rundate             = 1999123100
geonam_source       = flow
pgd_source          = flow
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 1
nnodes              = 1
openmp              = 1

# SURFEX
# ======

[PP_arome]
rundate             = 2020081800
geometry            = nlcc2500
prep_initial_geometry = geometry(global1198)
geonam_source       = static
pgd_source          = flow
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 1
nnodes              = 1
openmp              = 1

[PP_arpege]
prefix              = geo
rundate             = 2020081800
prep_initial_geometry = geometry(global1198)
geonam_source       = static
pgd_source          = flow
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 1
nnodes              = 1
openmp              = 1

# ASSIM
# =====

[arpege_BSHM4DVar_OOPS]
geometry            = geometry(globalupd149)
test_family         = op_obs_model
timestep            = 1800
rundate             = 2022012106
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 16
nnodes              = 1
openmp              = 8

[arpege_BA4DVar_OOPS]
geometry            = geometry(globalupd149)
timestep            = 1800
rundate             = 2022012106
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 16
nnodes              = 1
openmp              = 8

[arpege_BSM4DVar_CNT0]
geometry            = geometry(globalupd149)
timestep            = 1800
rundate             = 2022012106
# profile (ntasks = ntasks/node)
time                = 01:00:00
ntasks              = 16
nnodes              = 1
openmp              = 8

[arpege_BS4D__obstype]
geometry            = geometry(globalupd149)
timestep            = 1800
rundate             = 2022012106
# loop on obstypes
obstypes            = list(conv,aeolus,atms,cris2,geow,gmi,gps,gpssol,iasi,iasi2,mwhsx,mwri,mwts2,scat,sev,seviri,ssmis,tovsa,tovsb)
# profile (ntasks = ntasks/node)
time                = 02:00:00
ntasks              = 16
nnodes              = 1
openmp              = 8

[arpege_BSHM3DVar_OOPS]
geometry            = geometry(globalupd149)
timestep            = 1800
test_family         = op_obs_file
rundate             = 2022012106
# profile (ntasks = ntasks/node)
time                = 00:10:00
ntasks              = 16
nnodes              = 1
openmp              = 8

[arpege_BSM3DVar_CNT0]
geometry            = geometry(globalupd149)
timestep            = 1800
rundate             = 2022012106
# profile (ntasks = ntasks/node)
time                = 00:10:00
ntasks              = 16
nnodes              = 1
openmp              = 8

[arpege_BS3D__obstype]
geometry            = geometry(globalupd149)
timestep            = 1800
# loop on obstypes
obstypes            = list(conv,aeolus,atms,cris2,geow,gmi,gps,gpssol,iasi,iasi2,mwhsx,mwri,mwts2,scat,sev,seviri,ssmis,tovsa,tovsb)
rundate             = 2022012106
# profile (ntasks = ntasks/node)
time                = 02:00:00
ntasks              = 16
nnodes              = 1
openmp              = 8

[arome_BSM3DVar_CNT0]
geometry            = geometry(france10km)
timestep            = 60
# several rundates to cover the whole span of obstypes
rundates            = 2019081803,2019081809,2019081812,2019081818
discard_obstype     = radar1
# profile (ntasks = ntasks/node)
time                = 00:30:00
ntasks              = 16
nnodes              = 1
openmp              = 8

[arome_BSM3DVar_OOPS]
geometry            = geometry(france10km)
timestep            = 60
# several rundates to cover the whole span of obstypes
rundates            = 2025030912,2025030915,2025030921,2025031003,2025031006
# profile (ntasks = ntasks/node)
time                = 00:40:00
ntasks              = 16
nnodes              = 1
openmp              = 8

[arome_BA3DVar_OOPS]
geometry            = geometry(france10km)
timestep            = 60
# several rundates to cover the whole span of obstypes
rundates            = 2025030912,2025030915,2025030921,2025031003,2025031006
discard_obstype     = radar1
# profile (ntasks = ntasks/node)
time                = 00:40:00
ntasks              = 16
nnodes              = 1
openmp              = 8

[arome_BS3D_CNT0__obstype]
geometry            = geometry(france10km)
timestep            = 60
# loop on obstypes
obstypes            = list(atms,cris,iasi,scat,tovsa,tovsb,conv,geow,gpssol,mwhsx,odim,radar,seviri,gmi,ssmis)
# rundate determined by obstype
obstype_rundate_map = dict(atms:2019081803 cris:2019081803 iasi:2019081809 scat:2019081809 tovsa:2019081809 tovsb:2019081809 conv:2019081812 geow:2019081812 gpssol:2019081812 mwhsx:2019081812 odim:2019081812 radar:2019081812 seviri:2019081812 gmi:2019081818 ssmis:2019081818)
# profile (ntasks = ntasks/node)
time                = 02:00:00
ntasks              = 16
nnodes              = 1
openmp              = 8

[arome_BS3D_OOPS__obstype]
geometry            = geometry(france10km)
timestep            = 60
# loop on obstypes
obstypes            = list(atms,conv,geow,gmi,gps,gpssol,iasi,mwhsx,odim,scat,serval,seviri,ssmis,tovsa,tovsb)
# rundate determined by obstype
obstype_rundate_map = dict(atms:2025030912 conv:2025030912 geow:2025030912 gmi:2025031003 gps:2025030912 gpssol:2025030912 iasi:2025030921 mwhsx:2025031006 odim:2025030912 scat:2025030921 serval:2025030912 seviri:2025030921 ssmis:2025030915 tovsa:2025030921 tovsb:2025030912)
# profile (ntasks = ntasks/node)
time                = 02:00:00
ntasks              = 16
nnodes              = 1
openmp              = 8

[arpege_BC]
geometry            = geometry(globalupd149)
rundate             = 2017121006
# profile (ntasks = ntasks/node)
time                = 00:20:00
ntasks              = 16
nnodes              = 1
openmp              = 1

[Bmat_arpege]
geometry            = geometry(globalupd224)
timestep            = 1800
rundate             = 2022012106
members             = 8
mpireads            = list(1,4)
# profile (ntasks = ntasks/node)
time                = 00:30:00
ntasks              = 8
nnodes              = 1
openmp              = 4

[Bmat_arome]
geometry            = geometry(france10km)
timestep            = 60
rundate             = 2025030912
members             = 8
# profile (ntasks = ntasks/node)
time                = 00:30:00
ntasks              = 8
nnodes              = 1
openmp              = 4

[ModelTLAD_arpege]
geometry            = geometry(globalupd224)
timestep            = 1800
rundate             = 2022012106
# profile (ntasks = ntasks/node)
time                = 00:30:00
ntasks              = 8
nnodes              = 1
openmp              = 4

[ObsOp4D_arpege]
geometry            = geometry(globalupd149)
timestep            = 1800
rundate             = 2022012106
test_family         = op_obs_model
# loop on obstypes
obstypes            = list(conv,aeolus,atms,cris2,geow,gmi,gps,gpssol,iasi,iasi2,mwhsx,mwri,mwts2,scat,sev,seviri,ssmis,tovsa,tovsb)
# profile (ntasks = ntasks/node)
time                = 02:00:00
ntasks              = 16
nnodes              = 1
openmp              = 8

[ObsOp3D_arpege]
geometry            = geometry(globalupd149)
timestep            = 1800
rundate             = 2022012106
test_family         = op_obs_file
# loop on obstypes
obstypes            = list(conv,aeolus,atms,cris2,geow,gmi,gps,gpssol,iasi,iasi2,mwhsx,mwri,mwts2,scat,sev,seviri,ssmis,tovsa,tovsb)
# profile (ntasks = ntasks/node)
time                = 02:00:00
ntasks              = 16
nnodes              = 1
openmp              = 8
