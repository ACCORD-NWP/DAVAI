#!/usr/bin/env python3
# -*- coding:Utf-8 -*-
"""
Run a Davai experiment given its **XPID**.
"""
from __future__ import print_function, absolute_import, unicode_literals, division

import os
import argparse
import re
import subprocess

DAVAI_XP_DIRECTORY = os.environ.get('DAVAI_XP_DIRECTORY', None)
if not DAVAI_XP_DIRECTORY:
    WORKDIR = os.environ.get('WORKDIR', None)
    if WORKDIR:
        DAVAI_XP_DIRECTORY = os.path.join(WORKDIR, 'davai')
DAVAI_IAL_REPOSITORY = os.environ.get('DAVAI_IAL_REPOSITORY',
                                      os.path.join(os.environ.get('HOME'), 'repositories', 'arpifs'))


def main(XPID, xp_directory=DAVAI_XP_DIRECTORY):
    """
    Run a Davai experiment given its **XPID**.
    """
    re_xpid = re.compile('.+\.((NRV)|(?P<usecase>ELP))@\w+')  # ! consistency with davai_prep_xp: AnXP.xpid !
    m = re_xpid.match(XPID)
    if m:
        usecase = m.group('usecase')
    else:
        raise ValueError("Unable to determine usecase from XPID.")
    vconf = usecase.lower()
    if xp_directory is not None:
        xp_path = os.path.join(xp_directory, XPID, 'davai', vconf)
    else:
        raise OSError("Experiment path must be provided by argument, " +
                      "or through env variables $DAVAI_XP_DIRECTORY or $WORKDIR/davai.")
    os.chdir(xp_path)
    subprocess.call(['./run.sh',])


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Run a Davai experiment given its **XPID**.')
    parser.add_argument('XPID',
                        help="XPID of the Davai experiment to be ran.")
    parser.add_argument('-d', '--xp_directory',
                        default=DAVAI_XP_DIRECTORY,
                        help="Path to experiments directory (default: '{}').".format(DAVAI_XP_DIRECTORY))
    args = parser.parse_args()

    main(args.XPID, xp_directory=args.xp_directory)

